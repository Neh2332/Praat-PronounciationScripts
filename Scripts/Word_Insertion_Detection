# Praat Script: Word Insertion Detection
# Compares user speech to a reference to detect likely word insertions
# based on the number of speech segments and overall duration.

# 1. Select Reference Sound File
pauseScript: "Click OK to select the REFERENCE sound file (correct pronunciation)"
reference$ = chooseReadFile$: "Select reference sound file"
if reference$ = ""
    exitScript: "No reference file selected. Script terminated."
endif
reference = Read from file: reference$
reference_name$ = selected$("Sound")

# 2. Select User Sound File
pauseScript: "Click OK to select the USER sound file (pronunciation to evaluate)"
user$ = chooseReadFile$: "Select user sound file"
if user$ = ""
    exitScript: "No user file selected. Script terminated."
endif
user = Read from file: user$
user_name$ = selected$("Sound")

# 3. Analyze Reference Sound for Duration and Speech Segments
selectObject: reference
ref_duration = Get total duration

# Create TextGrid based on silences to count speech segments
To TextGrid (silences): 100, 0, -25, 0.1, 0.05, "silent", "sounding"
reference_textgrid = selected("TextGrid")

selectObject: reference_textgrid
ref_num_intervals = Get number of intervals: 1
ref_speech_segments = 0

# Count sounding segments in reference
for i from 1 to ref_num_intervals
    selectObject: reference_textgrid
    label$ = Get label of interval: 1, i
    if label$ = "sounding"
        ref_speech_segments = ref_speech_segments + 1
    endif
endfor

# 4. Analyze User Sound for Duration and Speech Segments
selectObject: user
user_duration = Get total duration

# Create TextGrid based on silences to count speech segments
To TextGrid (silences): 100, 0, -25, 0.1, 0.05, "silent", "sounding"
user_textgrid = selected("TextGrid")

selectObject: user_textgrid
user_num_intervals = Get number of intervals: 1
user_speech_segments = 0

# Count sounding segments in user recording
for i from 1 to user_num_intervals
    selectObject: user_textgrid
    label$ = Get label of interval: 1, i
    if label$ = "sounding"
        user_speech_segments = user_speech_segments + 1
    endif
endfor

# 5. Calculate Duration Ratio and Check for Insertion Conditions
# Calculate duration ratio, handling potential division by zero
if ref_duration > 0
    duration_ratio = user_duration / ref_duration
else
    # If reference duration is zero, ratio is meaningless for insertion detection
    duration_ratio = 0
endif

# Condition for likely word insertion:
# More speech segments in user recording AND user recording is noticeably longer (e.g., > 110% of ref duration)
word_insertions_likely = (user_speech_segments > ref_speech_segments and duration_ratio > 1.1)


# 6. Display Results --- UX ENHANCEMENTS BELOW ---
clearinfo
appendInfoLine: "WORD INSERTION DETECTION RESULTS"
appendInfoLine: "============================="
appendInfoLine: "This script checks if the user might have inserted extra words or sounds compared to the reference,"
appendInfoLine: "by looking at the number of speech chunks and the overall recording length."
appendInfoLine: ""
appendInfoLine: "Comparing Files:"
appendInfoLine: "  Reference file: ", reference_name$
appendInfoLine: "  User file:      ", user_name$
appendInfoLine: ""
appendInfoLine: "Key Metrics Analyzed:"
appendInfoLine: "  Reference duration: ", fixed$(ref_duration, 3), " seconds"
appendInfoLine: "  User duration:      ", fixed$(user_duration, 3), " seconds"
appendInfoLine: "  Duration ratio (User/Ref): ", fixed$(duration_ratio, 2), " (A value > 1 means user recording is longer)"
appendInfoLine: ""
appendInfoLine: "  Reference speech segments (chunks of sound): ", ref_speech_segments
appendInfoLine: "  User speech segments (chunks of sound):      ", user_speech_segments
appendInfoLine: "  (More user segments can indicate insertions)"
appendInfoLine: ""

appendInfoLine: "--------------------"
appendInfoLine: "DETECTION ASSESSMENT:"
appendInfoLine: "--------------------"

# Provide clearer explanations based on the detection result
if word_insertions_likely
    appendInfoLine: "-> LIKELY word insertion(s) detected."
    appendInfoLine: ""
    appendInfoLine: "   Why? Two factors point towards insertions:"
    appendInfoLine: "     1. More Speech Segments: The user recording has more chunks of sound (", user_speech_segments, ") than the reference (", ref_speech_segments, ")."
    percentage_longer = (duration_ratio - 1) * 100
    appendInfoLine: "     2. Significantly Longer Duration: The user recording is ", fixed$(percentage_longer, 1), "% longer (ratio ", fixed$(duration_ratio, 2), "), meeting the threshold (> 1.1) for significant length increase."
    appendInfoLine: ""
    appendInfoLine: "   Conclusion: The combination of more speech segments and a significantly longer duration suggests extra words or sounds might have been added."

else
    appendInfoLine: "-> Word insertions NOT detected based on this analysis."
    appendInfoLine: ""
    appendInfoLine: "   Why?"
    # Explain exactly why insertions were *not* detected
    if user_speech_segments <= ref_speech_segments
        appendInfoLine: "     - The user recording has an equal or smaller number of speech segments (", user_speech_segments, ") compared to the reference (", ref_speech_segments, ")."
        appendInfoLine: "       This primary condition for insertion was not met."
    elsif duration_ratio <= 1.1
         appendInfoLine: "     - Although the user may have more speech segments (", user_speech_segments, " vs ", ref_speech_segments, "), the user recording's duration is NOT significantly longer."
         appendInfoLine: "       The duration ratio is ", fixed$(duration_ratio, 2), ", which is below the threshold (> 1.1) used to indicate potential insertion based on length."
    else
         # Handle edge cases if necessary (though less likely for insertion)
         appendInfoLine: "     - The analysis criteria for insertion were not met."
    endif
    appendInfoLine: ""
    appendInfoLine: "   Conclusion: The combination of factors needed to suggest insertions (more segments AND significantly longer duration) was not found."

endif

appendInfoLine: ""
appendInfoLine: "--------------------"
appendInfoLine: "Important Note:"
appendInfoLine: "  This detection is an estimation based on automatic silence detection."
appendInfoLine: "  Its accuracy depends heavily on clear recordings (minimal background noise)"
appendInfoLine: "  and how well the silence detection parameters (-25 dB threshold, 0.1s min silence) match the actual speech patterns."
appendInfoLine: "  Consider listening to both recordings for confirmation."
appendInfoLine: "--------------------"


# 7. Clean up created objects
removeObject: reference, user, reference_textgrid, user_textgrid

appendInfoLine: ""
appendInfoLine: "Script finished."