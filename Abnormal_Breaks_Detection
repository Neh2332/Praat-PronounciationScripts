# Praat Script: Abnormal Breaks Detection
# Compares user speech to a reference to detect likely abnormal breaks
# based on the number and average duration of pauses (silences).

# 1. Select Reference Sound File
pauseScript: "Click OK to select the REFERENCE sound file (correct pronunciation)"
reference$ = chooseReadFile$: "Select reference sound file"
if reference$ = ""
    exitScript: "No reference file selected. Script terminated."
endif
reference = Read from file: reference$
reference_name$ = selected$("Sound")

# 2. Select User Sound File
pauseScript: "Click OK to select the USER sound file (pronunciation to evaluate)"
user$ = chooseReadFile$: "Select user sound file"
if user$ = ""
    exitScript: "No user file selected. Script terminated."
endif
user = Read from file: user$
user_name$ = selected$("Sound")

# 3. Analyze Reference Sound for Pauses
selectObject: reference
# Create TextGrid based on silences
To TextGrid (silences): 100, 0, -25, 0.1, 0.05, "silent", "sounding"
reference_textgrid = selected("TextGrid")

selectObject: reference_textgrid
ref_num_intervals = Get number of intervals: 1
ref_num_pauses = 0
ref_pause_durations = 0

# Count pause segments and sum their durations in reference
for i from 1 to ref_num_intervals
    selectObject: reference_textgrid
    label$ = Get label of interval: 1, i
    if label$ = "silent"
        ref_num_pauses = ref_num_pauses + 1
        start = Get start time of interval: 1, i
        end = Get end time of interval: 1, i
        pause_duration = end - start
        ref_pause_durations = ref_pause_durations + pause_duration
    endif
endfor

# Calculate average pause duration for reference
if ref_num_pauses > 0
    ref_avg_pause = ref_pause_durations / ref_num_pauses
else
    ref_avg_pause = 0
endif

# 4. Analyze User Sound for Pauses
selectObject: user
# Create TextGrid based on silences
To TextGrid (silences): 100, 0, -25, 0.1, 0.05, "silent", "sounding"
user_textgrid = selected("TextGrid")

selectObject: user_textgrid
user_num_intervals = Get number of intervals: 1
user_num_pauses = 0
user_pause_durations = 0

# Count pause segments and sum their durations in user recording
for i from 1 to user_num_intervals
    selectObject: user_textgrid
    label$ = Get label of interval: 1, i
    if label$ = "silent"
        user_num_pauses = user_num_pauses + 1
        start = Get start time of interval: 1, i
        end = Get end time of interval: 1, i
        pause_duration = end - start
        user_pause_durations = user_pause_durations + pause_duration
    endif
endfor

# Calculate average pause duration for user
if user_num_pauses > 0
    user_avg_pause = user_pause_durations / user_num_pauses
else
    user_avg_pause = 0
endif

# 5. Compare Pause Patterns and Check for Abnormal Break Conditions
pause_count_diff = abs(user_num_pauses - ref_num_pauses)

# Calculate pause duration ratio and score (mirroring original script logic)
# Score reflects similarity of average pause duration (100 = similar avg duration, lower = different)
pause_duration_ratio = if ref_avg_pause > 0 then user_avg_pause / ref_avg_pause else if user_avg_pause = 0 then 1 else 0 endif endif
pause_pattern_score = if pause_duration_ratio > 1 then 1 / pause_duration_ratio else pause_duration_ratio endif
pause_pattern_score = pause_pattern_score * 100

# Condition for likely abnormal breaks:
# Significant difference in pause count (more than 1 difference)
# OR pause pattern score is low (below 70, indicating very different average pause lengths)
abnormal_breaks_likely = (pause_count_diff > 1 or pause_pattern_score < 70)


# 6. Display Results --- UX ENHANCEMENTS BELOW ---
clearinfo
appendInfoLine: "ABNORMAL BREAKS DETECTION RESULTS"
appendInfoLine: "==============================="
appendInfoLine: "This script checks for unusual pausing patterns (too many/few pauses, or pauses"
appendInfoLine: "that are much longer/shorter on average) compared to the reference recording."
appendInfoLine: ""
appendInfoLine: "Comparing Files:"
appendInfoLine: "  Reference file: ", reference_name$
appendInfoLine: "  User file:      ", user_name$
appendInfoLine: ""
appendInfoLine: "Key Metrics Analyzed (based on detected silences):"
appendInfoLine: "  Reference pause count: ", ref_num_pauses
appendInfoLine: "  User pause count:      ", user_num_pauses
appendInfoLine: "  Difference in count:   ", pause_count_diff, " (A difference > 1 is considered significant)"
appendInfoLine: ""
appendInfoLine: "  Reference avg. pause duration: ", fixed$(ref_avg_pause * 1000, 0), " ms"
appendInfoLine: "  User avg. pause duration:      ", fixed$(user_avg_pause * 1000, 0), " ms"
appendInfoLine: "  Pause Pattern Score (0-100):   ", fixed$(pause_pattern_score, 1)
appendInfoLine: "     (Compares avg. durations; closer to 100 means more similar average length."
appendInfoLine: "      A score < 70 is considered significantly different.)"
appendInfoLine: ""

appendInfoLine: "--------------------"
appendInfoLine: "DETECTION ASSESSMENT:"
appendInfoLine: "--------------------"

# Provide clearer explanations based on the detection result
if abnormal_breaks_likely
    appendInfoLine: "-> LIKELY abnormal break pattern detected."
    appendInfoLine: ""
    appendInfoLine: "   Why? At least one of the following conditions was met:"

    # Explain specifically which condition(s) triggered the flag
    reason_count_diff = 0
    if pause_count_diff > 1
        appendInfoLine: "     1. Significant Pause Count Difference: The number of detected pauses differs by more than 1"
        appendInfoLine: "        (Reference: ", ref_num_pauses, ", User: ", user_num_pauses, ", Difference: ", pause_count_diff, ")."
        reason_count_diff = 1
    endif

    if pause_pattern_score < 70
        line_prefix$ = if reason_count_diff = 1 then "     2. " else "     1. " endif
        appendInfoLine: line_prefix$, "Significant Average Duration Difference: The Pause Pattern Score (", fixed$(pause_pattern_score, 1), "/100)"
        appendInfoLine: "        is below the threshold of 70, indicating the average length of pauses is quite different."
    endif
    appendInfoLine: ""
    appendInfoLine: "   Conclusion: The user's pausing (either number or average length) deviates significantly from the reference."

else
    appendInfoLine: "-> Abnormal breaks NOT detected based on this analysis."
    appendInfoLine: ""
    appendInfoLine: "   Why? Both conditions for detecting abnormal breaks were avoided:"
    appendInfoLine: "     1. Pause Count Similar: The difference in the number of pauses is small (<= 1)."
    appendInfoLine: "        (Reference: ", ref_num_pauses, ", User: ", user_num_pauses, ", Difference: ", pause_count_diff, ")"
    appendInfoLine: "     2. Average Duration Similar: The Pause Pattern Score (", fixed$(pause_pattern_score, 1), "/100)"
    appendInfoLine: "        is acceptable (>= 70), indicating average pause lengths are reasonably similar."
    appendInfoLine: ""
    appendInfoLine: "   Conclusion: The user's pausing pattern appears reasonably similar to the reference in terms of count and average duration."

endif

appendInfoLine: ""
appendInfoLine: "--------------------"
appendInfoLine: "Important Note:"
appendInfoLine: "  This detection relies on automatic silence detection based on intensity and duration thresholds."
appendInfoLine: "  - Accuracy depends on clear recordings and appropriate silence detection parameters"
appendInfoLine: "    (currently: -25 dB threshold, 0.1s min silence interval)."
appendInfoLine: "  - Short pauses within words or very quiet speech might be misclassified."
appendInfoLine: "  Consider listening to confirm the nature of the detected pauses or lack thereof."
appendInfoLine: "--------------------"


# 7. Clean up created objects
removeObject: reference, user, reference_textgrid, user_textgrid

appendInfoLine: ""
appendInfoLine: "Script finished."